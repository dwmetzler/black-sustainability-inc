{"version":3,"sources":["home/HomeActions.ts","api/models/Project.ts","api/models/ProjectGoal.ts","home/HomeReducer.ts","navigation/DonateHeader.tsx","home/ProjectTabs.tsx","img/focusAreas.svg","home/HomePage.tsx","home/index.ts","home/HomeSaga.ts","theme.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","RootReducer.ts","configure-store.ts","index.tsx"],"names":["HomeActionTypes","fetchCurrentProjectsDidSucceed","fetchedProjects","type","FETCH_CURRENT_PROJECTS_DID_SUCCEED","projects","Project","key","title","focusArea","location","about","imageUrl","goals","this","ProjectGoal","summary","description","dummyProject1","dummyProject2","initialState","Object","freeze","currentProjects","homeReducer","state","action","console","log","reducer","DonateHeader","boxShadow","height","alignItems","width","position","top","left","zIndex","justify","bgColor","paddingX","paddingY","textStyle","style","color","_hover","opacity","LabeledTextBox","props","textAlign","fontSize","label","text","ProjectTabs","length","align","variant","map","project","index","fontWeight","_selected","marginTop","objectPosition","objectFit","boxSize","src","maxWidth","marginLeft","spacing","marginY","templateColumns","gap","goal","padding","borderRadius","border","TeamAvatar","size","name","bio","HomePage","backgroundImage","backgroundPosition","backgroundSize","marginRight","backdropFilter","networkGraphic","sagaInitializer","saga","Page","connect","home","theme","extendTheme","colors","brand","green","red","yellow","black","components","Button","variants","solid","Heading","baseStyle","textStyles","h1","textTransform","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","rootReducer","combineReducers","Home","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8aca23a5.chunk.js","sourcesContent":["import Project from \"../api/models/Project\";\n\nexport enum HomeActionTypes {\n    // CHORE_LIST_DATA_DID_CHANGE = 'todo/CHORE_LIST_DATA_DID_CHANGE',\n    // CHORE_LIST_LAYOUT_INVALID = 'todo/CHORE_LIST_LAYOUT_INVALID',\n    // FETCH_CHORES = 'todo/FETCH_ITEMS',\n    FETCH_CURRENT_PROJECTS_DID_SUCCEED = 'todo/FETCH_CURRENT_PROJECT_DID_SUCCEED',\n    // SET_PROJECT_TO_EDIT = 'todo/SET_PROJECT_TO_EDIT',\n    // SET_TASK_TO_EDIT = 'todo/SET_TASK_TO_EDIT',\n    // UPDATE_PROJECT = 'todo/UPDATE_PROJECT',\n    // UPDATE_PROJECT_DID_SUCCEED = 'todo/UPDATE_PROJECT_DID_SUCCEED',\n}\n\nexport type HomeAction = {\n    type: HomeActionTypes;\n    // chores?: Array<IChore>;\n    // index?: number;\n    projects?: Array<Project>;\n    // task?: Task;\n    // chore?: IChore;\n}\n\nclass HomeActions {\n\n    [s: string]: (...args: any[]) => HomeAction;\n    //\n    // choreListDataDidChange = (newChoreList: Array<IChore>) => ({\n    //     type: ToDoActionTypes.CHORE_LIST_DATA_DID_CHANGE,\n    //     chores: newChoreList\n    // });\n    //\n    // choreListLayoutInvalid = () => ({ type: ToDoActionTypes.CHORE_LIST_LAYOUT_INVALID });\n    //\n    // fetchChores = (): ToDoAction => ({ type: ToDoActionTypes.FETCH_CHORES });\n    //\n    fetchCurrentProjectsDidSucceed = (fetchedProjects: Array<Project>): HomeAction => ({\n        type: HomeActionTypes.FETCH_CURRENT_PROJECTS_DID_SUCCEED,\n        projects: fetchedProjects\n    });\n    //\n    // setProjectToEdit = (project: Project): ToDoAction => ({\n    //     type: ToDoActionTypes.SET_PROJECT_TO_EDIT,\n    //     project\n    // });\n    //\n    // setTaskToEdit = (task: Task): ToDoAction => ({\n    //     type: ToDoActionTypes.SET_TASK_TO_EDIT,\n    //     task\n    // });\n    //\n    // updateProject = (updatedProject: Project) => {\n    //     console.log(\"updateProject action\");\n    //     return {\n    //         type: ToDoActionTypes.UPDATE_PROJECT,\n    //         project: updatedProject,\n    //     }\n    // };\n    //\n    // updateProjectDidSucceed = (updatedProject: Project) => ({\n    //     type: ToDoActionTypes.UPDATE_PROJECT_DID_SUCCEED,\n    //     project: updatedProject,\n    // });\n\n}\n\nexport default new HomeActions();","import ProjectGoal from \"./ProjectGoal\";\n\nclass Project {\n    readonly key: string;\n    readonly title: string;\n    readonly focusArea: string;\n    readonly location: string;\n    readonly about: string;\n    readonly imageUrl: string;\n    readonly goals: Array<ProjectGoal>;\n\n    constructor(key: string, title: string, focusArea: string, location: string, about: string, imageUrl: string, goals: Array<ProjectGoal> = []) {\n        this.key = key;\n        this.title = title;\n        this.focusArea = focusArea;\n        this.location = location;\n        this.about = about;\n        this.imageUrl = imageUrl;\n        this.goals = goals;\n    }\n}\n\nexport default Project;","class ProjectGoal {\n    readonly summary: string;\n    readonly description: string;\n\n    constructor(summary: string, description: string) {\n        this.summary = summary;\n        this.description = description;\n    }\n}\n\nexport default ProjectGoal;","import HomeActions, {HomeAction, HomeActionTypes} from \"./HomeActions\";\nimport Project from \"../api/models/Project\";\nimport ProjectGoal from \"../api/models/ProjectGoal\";\n\nexport type HomeState = {\n    currentProjects: Array<Project>;\n}\n\nconst dummyGoals: Array<ProjectGoal> = [\n    new ProjectGoal(\"Produce food sustainably\", \"Increase food availability to curb undernourishment and increase food security in the community\"),\n    new ProjectGoal(\"Provide decent livelihoods\", \"Provide employment opportunities and contribute to community development\"),\n    new ProjectGoal(\"Improve biodiversity\", \"Expanding to grow other fruits, vegetables, herbs, spices (and also do beekeeping)\"),\n    new ProjectGoal(\"Give back\", \"5% of the annual profit will be used to help education, healthcare, sanitation and afforestation\"),\n];\nconst dummyProject1 = new Project(\n    \"1\",\n    \"Nia OT Foods Limited\",\n    \"Sustainable Agriculture and Global Community\",\n    \"Ghana\",\n    \"Theophilus Owusu is developing a regenerative moringa agroforestry project.\\n\\nMoringa is the main crop on his property, while vetiva, citronella, plantain and lemongrass serve as cover crops and provide soil + water conservation. These crops also provide food and medicine to be used in essential oil production and local roofing.\",\n    \"https://static.wixstatic.com/media/af8b67_60006b87ad324631bc0fad57a942856b~mv2.png/v1/fill/w_916,h_516,al_c,q_90,usm_0.66_1.00_0.01/Screen%20Shot%202020-09-14%20at%206_12_59%20PM.webp\",\n    dummyGoals);\n\nconst dummyGoals2: Array<ProjectGoal> = [\n    new ProjectGoal(\"Preserve Maroon Culture\", \"Make space for edutainment, arts & merchandising, workshops, and an herbal center\"),\n    new ProjectGoal(\"Create community\", \"Benefit the wider Maroon community of visual, literary and performing artists of Portland Parish, Jamaica\"),\n    new ProjectGoal(\"Share cultural arts\", \"Provide a space to share our cultural arts with the wider world and welcome visitors from all walks of life\"),\n];\nconst dummyProject2 = new Project(\n    \"2\",\n    \"The Granny Nanny Maroons\",\n    \"Global Community\",\n    \"Jamaica\",\n\"We are a traditional Jamaican Maroon performing arts ensemble, which consists of community-based artists, musicians, drummers, storytellers, craftspeople and herbal healers from the Windward Maroon capital and UNESCO World Heritage Site of Moore Town and the larger Rio Grande Valley.\\n\\nWe are finishing the Granny Nanny Maroon Culture Yawd, a mixed-use space for Live Cultural Edutainment; Arts & Craft Creation & Merchandising; Education & Skills Training Workshops; Jerk Pit & Herbal Center; and an Information Clearinghouse.\",\n    \"https://static.wixstatic.com/media/af8b67_eaaefac8095149468c03e56ed10d3b60~mv2.jpg/v1/fill/w_593,h_703,al_c,q_85/MAROON.webp\",\n    dummyGoals2);\n\nconst initialState: HomeState = Object.freeze({\n    currentProjects: [dummyProject1, dummyProject2],\n});\n\nconst homeReducer = (state: HomeState = initialState, action: HomeAction): HomeState => {\n    switch (action.type) {\n        // case ToDoActionTypes.FETCH_CHORES:\n        //     console.log(\"FETCH ITEMS REDUCER\");\n        //     return {\n        //         ...state,\n        //     };\n        //\n        case HomeActionTypes.FETCH_CURRENT_PROJECTS_DID_SUCCEED:\n            console.log('Fetched current projects: ', action.projects);\n            return {\n                ...state,\n                currentProjects: action.projects || [],\n            };\n        //\n        // case ToDoActionTypes.CHORE_LIST_DATA_DID_CHANGE:\n        //     console.log('Updating task data: ', action.chores);\n        //     return {\n        //         ...state,\n        //         chores: action.chores || [],\n        //     };\n        //\n        // case ToDoActionTypes.CHORE_LIST_LAYOUT_INVALID:\n        //     const newIndex = state.layoutStateIndex + 1;\n        //     console.log('New layout state index: ', newIndex);\n        //     return {\n        //         ...state,\n        //         layoutInvalidationKey: newIndex.toString(),\n        //         layoutStateIndex: newIndex\n        //     };\n        //\n        // case ToDoActionTypes.SET_PROJECT_TO_EDIT:\n        //     return {\n        //         ...state,\n        //         editingProject: action.project\n        //     };\n        //\n        // case ToDoActionTypes.SET_TASK_TO_EDIT:\n        //     return {\n        //         ...state,\n        //         editingTask: action.task\n        //     };\n        //\n        // case ToDoActionTypes.UPDATE_PROJECT_DID_SUCCEED: {\n        //     const updatedProject = action.project as Project;\n        //     return {\n        //         ...state,\n        //         editingProject: updatedProject\n        //     };\n        // }\n\n        default:\n            return state;\n    }\n}\n\nconst reducer = (state: HomeState = initialState, action: HomeAction): HomeState => {\n    return homeReducer(state, action);\n};\n\nexport default reducer;","import {Box, Button, Flex, HStack, Text} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst DonateHeader = () => {\n    return (\n        <Flex boxShadow={\"lg\"} height={\"4rem\"} alignItems={\"center\"} width={\"100%\"} position={\"fixed\"} top={0} left={0} zIndex={9999} justify={\"space-between\"} bgColor={\"white\"} paddingX={\"2rem\"} paddingY={\"0.125rem\"}>\n            <Box textStyle={\"h1\"}>\n                <span style={{color: \"black\"}}>Black</span>Sustainability Inc\n            </Box>\n            <HStack>\n                <Button _hover={{opacity: 0.5}}>\n                    Join\n                </Button>\n                <Button _hover={{opacity: 0.5}}>\n                    Donate\n                </Button>\n            </HStack>\n        </Flex>\n    )\n}\n\nexport default DonateHeader;","import Project from \"../api/models/Project\";\nimport {\n    Box,\n    Flex,\n    Grid,\n    Heading,\n    Image,\n    Spacer,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    Text,\n    VStack\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\ntype StoreProps = {\n    projects: Array<Project>;\n}\n\ntype ProjectTabsProp = StoreProps;\n\nconst ProjectTabs = (props: ProjectTabsProp) => {\n    let {projects} = props;\n\n    if(projects.length == 0) {\n        return (\n            <Text>\n                No current projects\n            </Text>\n        )\n    }\n\n    return (\n        <Tabs align={\"center\"} variant={\"enclosed\"}>\n            <TabList>\n                {projects.map((project, index) => (<Tab zIndex={1} color={\"#cceecc\"} fontSize={\"1.5rem\"} fontWeight={\"600\"} _selected={{ position: \"relative\", boxShadow: \"lg\", bgColor: \"white\", color: \"black\"}}>{project.title}</Tab>))}\n            </TabList>\n\n            <TabPanels boxShadow={\"lg\"} zIndex={2} position={\"relative\"}>\n                {projects.map((project, index) => (\n                    <TabPanel bgColor={\"white\"}>\n                        {/*<Heading>{project.title}</Heading>*/}\n                        <Flex justify={\"center\"} marginTop={\"2rem\"}>\n                            <Image objectPosition={\"center\"} objectFit={\"cover\"} boxSize={\"20rem\"} src={project.imageUrl}/>\n                            <VStack alignItems={\"flex-start\"} justify={\"center\"} maxWidth={\"50%\"} marginLeft={\"1rem\"} spacing={\"1rem\"}>\n                                <LabeledTextBox label={\"Focus Area\"} text={project.focusArea}/>\n                                <LabeledTextBox label={\"Location\"} text={project.location}/>\n                                <LabeledTextBox label={\"About\"} text={project.about}/>\n                            </VStack>\n                        </Flex>\n                        <Heading color={\"brand.black\"} marginY={\"2rem\"}>Goals</Heading>\n                        <Grid templateColumns={`repeat(${project.goals.length + 2}, 1fr)`} gap={10}>\n                            <Spacer/>\n                            {project.goals.map((goal, index) => (\n                                <VStack spacing={\"1rem\"} bgColor={\"brand.green\"} color={\"#fcfffc\"} padding={3} borderRadius={\"1rem\"} border={\"solid 0.5px rgba(0,0,0,0.05)\"} boxShadow={\"lg\"} paddingY={\"2rem\"}>\n                                    <Flex justify={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border={\"2px solid #eee\"} fontSize={\"2rem\"} width={\"3.5rem\"} height={\"3.5rem\"}>\n                                        <Heading>{index + 1}</Heading>\n                                    </Flex>\n                                    <Heading fontSize={\"1.5rem\"}>{goal.summary}</Heading>\n                                    <Text>{goal.description}</Text>\n                                </VStack>\n                            ))}\n                        </Grid>\n                    </TabPanel>))}\n            </TabPanels>\n        </Tabs>\n    );\n}\n\ntype OwnProps = {\n    label: string;\n    text: string;\n}\ntype LabeledTextBoxProps = OwnProps;\nconst LabeledTextBox = (props: LabeledTextBoxProps) => {\n    return (\n        <Box textAlign={\"left\"}>\n            <Heading textAlign={\"left\"} fontSize={\"1.5rem\"}>{props.label}</Heading>\n            <Text>{props.text}</Text>\n        </Box>\n    )\n}\n\nexport default ProjectTabs;\n","export default __webpack_public_path__ + \"static/media/focusAreas.a6c43cfe.svg\";","import React from \"react\";\nimport {Avatar, Box, Grid, Heading, HStack, Image, Spacer, Text, VStack} from \"@chakra-ui/react\";\nimport DonateHeader from \"../navigation/DonateHeader\";\nimport ProjectTabs from \"./ProjectTabs\";\nimport Project from \"../api/models/Project\";\nimport {RootState} from \"../RootReducer\";\nimport {connect} from \"react-redux\";\nimport networkGraphic from \"../img/focusAreas.svg\";\n\ntype StoreProps = {\n    currentProjects: Array<Project>;\n}\n\ntype HomePageProps = StoreProps;\n\ntype OwnProps = {\n    imageUrl: string;\n    name: string;\n    title: string;\n    bio: string;\n}\n\ntype TeamAvatarProps = OwnProps;\n\nconst TeamAvatar = (props: TeamAvatarProps) => {\n    return (\n        <VStack>\n            <Avatar size={\"2xl\"} name={props.name} src={props.imageUrl}/>\n            <Heading fontSize={\"1.5rem\"} fontWeight={400}>\n                {props.name}\n            </Heading>\n            <Heading fontSize={\"1rem\"} fontWeight={600}>\n                {props.title}\n            </Heading>\n            <Text>\n                {props.bio}\n            </Text>\n        </VStack>\n    );\n}\n\nconst HomePage = (props: HomePageProps) => {\n    const {currentProjects} = props;\n\n    return (\n        <Box>\n            <DonateHeader/>\n            <Box marginTop={\"4rem\"}>\n                <HStack\n                    justify={\"flex-end\"}\n                    width={\"100%\"}\n                    height={\"30rem\"}\n                    backgroundImage={\"https://giveme-5.org/wp-content/uploads/2019/03/sustainable_agriculture_fyouture.jpg\"}\n                    backgroundPosition={\"center\"}\n                    backgroundSize={\"cover\"}>\n                    <Text width={\"40%\"}\n                          fontSize={\"2rem\"}\n                          fontWeight={\"500\"}\n                          color={\"#333\"}\n                          marginRight={\"10rem\"}\n                          marginTop={\"-5rem\"}\n                          bgColor={\"rgba(255,255,255,0.6)\"}\n                          backdropFilter={\"blur(10px)\"}\n                          padding={\"1rem\"}\n                          paddingX={\"2rem\"}\n                          borderRadius={\"1rem\"}>\n                        Committed to sustainable development and providing interdisciplinary educational resources for people of Afrikan descent\n                    </Text>\n                </HStack>\n                {/* eslint-disable-next-line react/jsx-no-undef */}\n                <HStack justify={\"center\"} alignItems={\"center\"}>\n\n                    <Image height={\"50rem\"} boxSize={\"50rem\"} src={networkGraphic}/>\n                    <VStack  maxWidth={\"30%\"}>\n                        <Heading fontSize={\"2rem\"} color={\"brand.green\"} textAlign={\"left\"}>\n                            Building the largest Black & Green network of sustainability professionals, entrepreneurs, & enthusiasts\n                        </Heading>\n                        <Spacer/>\n                        <Text fontSize={\"1.5rem\"} textAlign={\"left\"}>\n                            Join us on our mission to connect and equip people of Afrikan descent with resources and development opportunities in sustainability fields.\n                        </Text>\n                    </VStack>\n                </HStack>\n                <VStack bgColor={\"brand.green\"} paddingY={\"2rem\"} marginY={\"1rem\"} spacing={6}>\n                    <Heading color={\"#fcfffc\"}>\n                        Current Projects\n                    </Heading>\n                    <ProjectTabs projects={currentProjects}/>\n                </VStack>\n                <VStack marginY={\"2rem\"}>\n                    <Heading marginY={\"1.5rem\"}>\n                        Team\n                    </Heading>\n                    <Grid templateColumns={\"repeat(5, 1fr)\"} gap={12}>\n                        <Spacer/>\n                        <TeamAvatar imageUrl={\"https://static.wixstatic.com/media/af8b67_265cf0f10be040b3a6697b6823648da5~mv2.jpg/v1/crop/x_0,y_600,w_2400,h_2400/fill/w_320,h_320,al_c,q_80,usm_0.66_1.00_0.01/Raina(17of20).webp\"}\n                                    name={\"Afia Raina Turner-Greenlea\"}\n                                    title={\"Co-Founder & Chair\"}\n                                    bio={\"biobiobio\"}/>\n                        <TeamAvatar imageUrl={\"https://static.wixstatic.com/media/af8b67_f6b8997556d34b6e81ccba8c1afea216~mv2.jpg/v1/crop/x_0,y_53,w_427,h_427/fill/w_320,h_320,al_c,q_80,usm_0.66_1.00_0.01/IMG_1129_edited.webp\"}\n                                    name={\"Yeamah Brewer\"}\n                                    title={\"Co-Founder & Vice Chair\"}\n                                    bio={\"biobiobio\"}/>\n                        <TeamAvatar imageUrl={\"https://static.wixstatic.com/media/af8b67_8618963a95bd4c3893d846e3b3472b01~mv2.jpeg/v1/fill/w_320,h_320,al_c,q_80,usm_0.66_1.00_0.01/charles.webp\"}\n                                    name={\"Charles Greenlea\"}\n                                    title={\"Agriculture Chair\"}\n                                    bio={\"biobiobio\"}/>\n                    </Grid>\n                </VStack>\n            </Box>\n        </Box>\n    )\n}\n\nexport const HomePageBaseComponent = HomePage;\n\nconst mapStateToProps = ({ home }: RootState): StoreProps => {\n    return {currentProjects: home.currentProjects};\n}\n\nexport default connect(mapStateToProps, null)(HomePage);","import reducer  from './HomeReducer';\nimport sagaInitializer from './HomeSaga';\nimport Page from './HomePage';\n\nexport default { reducer, sagaInitializer, Page };","import HomeActions, {HomeAction, HomeActionTypes} from \"./HomeActions\";\nimport { takeLatest, put, takeEvery } from 'redux-saga/effects';\n//import ApiClient from \"../api/ApiClient\";\n\nexport default (/*apiClient: ApiClient*/) => {\n    return {\n        //fetchChores,\n        saga,\n    };\n\n    /*function* fetchChores() {\n        const fetchedChores = apiClient.fetchChores();\n        yield put(ToDoActions.fetchChoresDidSucceed(fetchedChores));\n    }\n\n    function* updateProject({ project }: ToDoAction) {\n        if(project == undefined) {\n            console.error(\"Cannot update undefined project\");\n            return;\n        }\n        console.log('updating project: ', project);\n        console.log(apiClient);\n        const updatedProject = apiClient.patchProject(project);\n        yield put(ToDoActions.updateProjectDidSucceed(updatedProject));\n        yield put(ToDoActions.choreListLayoutInvalid());\n    }*/\n\n    function* saga() {\n        //yield takeLatest(ToDoActionTypes.FETCH_CHORES, fetchChores);\n        //yield takeLatest(ToDoActionTypes.UPDATE_PROJECT, updateProject);\n    }\n}","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n    colors: {\n        brand: {\n            green: \"#009845\",\n            red: \"#CE0E2D\",\n            yellow: \"#FFC629\",\n            black: \"#000000\"\n        }\n    },\n    components: {\n        Button: {\n            variants: {\n                solid: {\n                    color: \"brand.black\",\n                    bgColor: \"brand.yellow\"\n                }\n            }\n        },\n        Heading: {\n            baseStyle: {\n                textAlign: \"center\"\n            }\n        }\n    },\n    textStyles: {\n        h1: {\n            color: \"brand.green\",\n            textTransform: \"uppercase\",\n            fontWeight: \"700\",\n            fontSize: \"2rem\"\n        },\n    }\n});\n\nexport default theme;","import * as React from \"react\"\nimport {\n  ChakraProvider,\n} from \"@chakra-ui/react\"\nimport Home from \"./home\"\nimport theme from \"./theme\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Home.Page/>\n  </ChakraProvider>\n)\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import {combineReducers} from \"redux\";\nimport Home from \"./home\";\n\nexport const HOME_SLICE_NAME = 'home';\n\nexport const rootReducer = combineReducers({\n    [HOME_SLICE_NAME]: Home.reducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport \"regenerator-runtime/runtime\";\nimport {rootReducer} from \"./RootReducer\";\n\nfunction* rootSaga() {\n    console.log(\"Example saga reached\");\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from 'react-redux'\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport {store} from \"./configure-store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ColorModeScript />\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}